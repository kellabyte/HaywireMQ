<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Ploeh.AutoFixture.AutoFakeItEasy</name>
    </assembly>
    <members>
        <member name="T:Ploeh.AutoFixture.AutoFakeItEasy.AutoFakeItEasyCustomization">
            <summary>
            Enables auto-mocking with FakeItEasy.
            </summary>
        </member>
        <member name="M:Ploeh.AutoFixture.AutoFakeItEasy.AutoFakeItEasyCustomization.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ploeh.AutoFixture.AutoFakeItEasy.AutoFakeItEasyCustomization"/> class.
            </summary>
        </member>
        <member name="M:Ploeh.AutoFixture.AutoFakeItEasy.AutoFakeItEasyCustomization.#ctor(Ploeh.AutoFixture.Kernel.ISpecimenBuilder)">
            <summary>
            Initializes a new instance of the <see cref="T:Ploeh.AutoFixture.AutoFakeItEasy.AutoFakeItEasyCustomization"/> class with a
            <see cref="T:Ploeh.AutoFixture.AutoFakeItEasy.FakeItEasyRelay"/>.
            </summary>
            <param name="relay">The relay.</param>
        </member>
        <member name="M:Ploeh.AutoFixture.AutoFakeItEasy.AutoFakeItEasyCustomization.Customize(Ploeh.AutoFixture.IFixture)">
            <summary>
            Customizes an <see cref="T:Ploeh.AutoFixture.IFixture"/> to enable auto-mocking with FakeItEasy.
            </summary>
            <param name="fixture">The fixture upon which to enable auto-mocking.</param>
        </member>
        <member name="P:Ploeh.AutoFixture.AutoFakeItEasy.AutoFakeItEasyCustomization.Relay">
            <summary>
            Gets the relay that will be added to <see cref="P:Ploeh.AutoFixture.IFixture.ResidueCollectors"/> when
            <see cref="M:Ploeh.AutoFixture.AutoFakeItEasy.AutoFakeItEasyCustomization.Customize(Ploeh.AutoFixture.IFixture)"/> is invoked.
            </summary>
            <seealso cref="M:Ploeh.AutoFixture.AutoFakeItEasy.AutoFakeItEasyCustomization.#ctor(Ploeh.AutoFixture.Kernel.ISpecimenBuilder)"/>
        </member>
        <member name="T:Ploeh.AutoFixture.AutoFakeItEasy.FakeItEasyMethodQuery">
            <summary>
            Selects appropriate methods to create <see cref="T:FakeItEasy.Fake`1"/> instances.
            </summary>
        </member>
        <member name="M:Ploeh.AutoFixture.AutoFakeItEasy.FakeItEasyMethodQuery.SelectMethods(System.Type)">
            <summary>
            Selects constructors for the supplied type.
            </summary>
            <param name="type">The type.</param>
            <returns>
            Constructors for <paramref name="type"/>.
            </returns>
            <remarks>
            <para>
            This method returns a sequence of <see cref="T:Ploeh.AutoFixture.Kernel.StaticMethod"/> according to
            the public and protected constructors available on <paramref name="type"/>.
            </para>
            </remarks>
        </member>
        <member name="T:Ploeh.AutoFixture.AutoFakeItEasy.FakeItEasyBuilder">
            <summary>
            Provides pre- and post-condition checks for requests for fake instances.
            </summary>
            <seealso cref="M:Ploeh.AutoFixture.AutoFakeItEasy.FakeItEasyBuilder.Create(System.Object,Ploeh.AutoFixture.Kernel.ISpecimenContext)"/>
        </member>
        <member name="M:Ploeh.AutoFixture.AutoFakeItEasy.FakeItEasyBuilder.#ctor(Ploeh.AutoFixture.Kernel.ISpecimenBuilder)">
            <summary>
            Initializes a new instance of the <see cref="T:Ploeh.AutoFixture.AutoFakeItEasy.FakeItEasyBuilder"/> class with an
            <see cref="T:Ploeh.AutoFixture.Kernel.ISpecimenBuilder"/> to decorate.
            </summary>
            <param name="builder">The builder which must build mock instances.</param>
            <remarks>
            <para>
            <paramref name="builder"/> is subsequently available through the <see cref="P:Ploeh.AutoFixture.AutoFakeItEasy.FakeItEasyBuilder.Builder"/>
            property.
            </para>
            </remarks>
            <seealso cref="P:Ploeh.AutoFixture.AutoFakeItEasy.FakeItEasyBuilder.Builder"/>
        </member>
        <member name="M:Ploeh.AutoFixture.AutoFakeItEasy.FakeItEasyBuilder.Create(System.Object,Ploeh.AutoFixture.Kernel.ISpecimenContext)">
            <summary>
            Creates a new specimen based on a request.
            </summary>
            <param name="request">The request that describes what to create.</param>
            <param name="context">A context that can be used to create other specimens.</param>
            <returns>
            A mock instance created by FakeItEasy if appropriate; otherwise a
            <see cref="T:Ploeh.AutoFixture.Kernel.NoSpecimen"/> instance.
            </returns>
            <remarks>
            <para>
            The Create method checks whether a request is for an interface or abstract class. If so
            it delegates the call to the decorated <see cref="P:Ploeh.AutoFixture.AutoFakeItEasy.FakeItEasyBuilder.Builder"/>. When the specimen is
            returned from the decorated <see cref="T:Ploeh.AutoFixture.Kernel.ISpecimenBuilder"/> the method checks whether
            the returned instance is a FakeItEasy instance.
            </para>
            <para>
            If all pre- and post-conditions are satisfied, the mock instance is returned; otherwise
            a <see cref="T:Ploeh.AutoFixture.Kernel.NoSpecimen"/> instance.
            </para>
            </remarks>
        </member>
        <member name="P:Ploeh.AutoFixture.AutoFakeItEasy.FakeItEasyBuilder.Builder">
            <summary>
            Gets the decorated builder supplied through the constructor.
            </summary>
            <seealso cref="M:Ploeh.AutoFixture.AutoFakeItEasy.FakeItEasyBuilder.#ctor(Ploeh.AutoFixture.Kernel.ISpecimenBuilder)"/>
        </member>
        <member name="T:Ploeh.AutoFixture.AutoFakeItEasy.FakeItEasyRelay">
            <summary>
            Relays a request for an interface or an abstract class to a request for a
            <see cref="T:FakeItEasy.Fake`1"/> of that class.
            </summary>
        </member>
        <member name="M:Ploeh.AutoFixture.AutoFakeItEasy.FakeItEasyRelay.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ploeh.AutoFixture.AutoFakeItEasy.FakeItEasyRelay"/> class.
            </summary>
        </member>
        <member name="M:Ploeh.AutoFixture.AutoFakeItEasy.FakeItEasyRelay.#ctor(System.Func{System.Type,System.Boolean})">
            <summary>
            Initializes a new instance of the <see cref="T:Ploeh.AutoFixture.AutoFakeItEasy.FakeItEasyRelay"/> class with a specification
            that determines whether a type should be mocked.
            </summary>
            <param name="fakeableSpecification">
            A specification that determines whether a type should be mocked or not.
            </param>
        </member>
        <member name="M:Ploeh.AutoFixture.AutoFakeItEasy.FakeItEasyRelay.Create(System.Object,Ploeh.AutoFixture.Kernel.ISpecimenContext)">
            <summary>
            Creates a new specimen based on a request.
            </summary>
            <param name="request">The request that describes what to create.</param>
            <param name="context">A context that can be used to create other specimens.</param>
            <returns>
            A dynamic mock instance of the requested interface or abstract class if possible;
            otherwise a <see cref="T:Ploeh.AutoFixture.Kernel.NoSpecimen"/> instance.
            </returns>
        </member>
        <member name="P:Ploeh.AutoFixture.AutoFakeItEasy.FakeItEasyRelay.FakeableSpecification">
            <summary>
            Gets a specification that determines whether a given type should be mocked.
            </summary>
            <value>The specification.</value>
            <remarks>
            <para>
            This specification determins whether a given type should be relayed as a request for a
            mock of the same type. By default it only returns <see langword="true"/> for interfaces
            and abstract classes, but a different specification can be supplied by using the
            <see cref="M:Ploeh.AutoFixture.AutoFakeItEasy.FakeItEasyRelay.#ctor(System.Func{System.Type,System.Boolean})"/> overloaded constructor that takes a
            specification as input. In that case, this property returns the specification supplied
            to the constructor.
            </para>
            </remarks>
            <seealso cref="M:Ploeh.AutoFixture.AutoFakeItEasy.FakeItEasyRelay.#ctor(System.Func{System.Type,System.Boolean})"/>
        </member>
    </members>
</doc>
